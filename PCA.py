# -*- coding: utf-8 -*-
"""HW2question1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IHzf4EDeWEHdM4rtm2znueyQ1e1nerqq
"""

from google.colab import drive
drive.mount('/content/gdrive')

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

root = '/content/gdrive/My Drive/dataset'
images_csv_path = os.path.join(root, 'images.csv')

images = pd.read_csv(images_csv_path).to_numpy()

# calculate mean
images_mean = np.mean(images, axis=0)

# center mean
images_mean_centered = images - images_mean

# calculate covariance
# take transpose so row = sample, column = feature
cov = np.cov(images_mean_centered.T)

# eigenvectors, eigenvalues
eigenvalues, eigenvectors = np.linalg.eig(cov)

# sort eigenvectors in descending order
eigenvectors = eigenvectors.T
indices = eigenvalues.argsort()[::-1]
eigenvalues = eigenvalues[indices]
eigenvectors = eigenvectors[indices]

# PCA for k = 1 - 10
k = 10
plt.title("PCA " + str(k))
plt.imshow((eigenvectors)[k].reshape(48, 48), 'gray')

# k = 1, 10, 50, 100, 500
k = 5
pve = eigenvalues / np.sum(eigenvalues)
pves_100 = pve[:k] * 100
k = [1, 10, 50, 100, 500]
plt.title("PCA " + str(k))
plt.plot(pves_100, k)

# PVE for k = 1, 10, 50, 100, 500.
k = 500
pcas = eigenvectors[:k, :]
new_matrix = np.matmul(images[0], pcas.T)
image_rec = np.matmul(new_matrix, pcas) + images_mean
plt.imshow(image_rec.reshape(48, 48), 'gray')
plt.title("k = " + str(k))